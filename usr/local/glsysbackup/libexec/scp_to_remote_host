#!/usr/bin/env bash

#===================================================================================================
#
#  Author:				Christian Zettel (ccztux)
#						2017-02-04
#						http://linuxinside.at
#
#  Copyright:			Copyright Â© 2017 Christian Zettel (ccztux), all rights reserved
#
#  Project website:		https://github.com/ccztux/glsysbackup
#
#  Last Modification:	Christian Zettel (ccztux)
#						2019-12-13
#
#  Version				2.0.0-rc1
#
#  Description:			Generic Linux System Backup is an advanced backup tool written in bash.
#
#  License:				GNU GPLv3
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#===================================================================================================


#--------------------------------------------------------
# In case of an include attempt, write output and return:
#--------------------------------------------------------

if [ "${BASH_SOURCE[0]}" != "${0}" ]
then
	printf "\\n%s is NOT a bash library. Execute it directly!\\n\\n" "${BASH_SOURCE[0]##*/}"
	return 1
fi



#----------
# Function:
#----------

copyToRemoteHost()
{
	local remote_user="pi"
	local remote_host="wurlitzer"
	local remote_path="/home/${remote_user}"
	local ssh_private_key="/home/${remote_user}/.ssh/id_ed25519"
	local backup_file="/var/backups/tux01/systembackup/latest/systembackup.tar.gz"

	printf "Start copying backup to remote host...\\n"

	scp -i "${ssh_private_key}" "${backup_file}" "${remote_user}@${remote_host}:${remote_path}"

	return "${?}"
}



#-------
# Start:
#-------

if copyToRemoteHost
then
	printf "Copying backup to remote host was successful.\\n"
	exit 0
else
	printf "Copying backup to remote host was not successful.\\n"
	exit 1
fi
